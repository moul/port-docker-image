#!/bin/bash

set -e

usage() {
    echo "Usage: [DEBUG=1] $0 -i image-name [-r repo_name] [-b branch] [-p sub/path] [-f FROM] [-a ARCH] [-v] [-z]"
    exit 1
}

contains() {
    [[ $1 =~ $2 ]] && exit 0 || exit 1
}

convert_from() {
    tr "/" "-" | sed 's|^|armbuild/|'
}

while getopts ":i:r:b:p:a:f:hvz" opt; do
    case $opt in
        z)
            PUSH=1
            ;;
        i)
            IMAGE="$OPTARG"
            ;;
        r)
            REPO="$OPTARG"
            ;;
        b)
            BRANCH="$OPTARG"
            ;;
        p)
            SUBPATH="$OPTARG"
            ;;
        a)
            ARCH="$OPTARG"
            ;;
        f)
            FROM="$OPTARG"
            ;;
        v)
            DEBUG=1
            ;;
        h)
            usage
            ;;
        \?)
            echo "Invliad otion $OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option s-$OPTARG requires an argument." >&2
            exit 1
            ;;
    esac
done

if [[ -z "$IMAGE" ]]; then usage; fi

if [ "$DEBUG" = "1" ];then set -x; fi

BRANCH=${BRANCH:-master}
SUBPATH=${SUBPATH:-/}
ARCH=${ARCH:-$(uname -m)}
if ( contains "armv7l" "$ARCH" ); then ARCH="armhf"; fi
BUILDDIR=$(mktemp -d /tmp/port_docker_image.XXXXXXXXXX)
echo $BUILDDIR
IMAGE_NAME=$(echo "$IMAGE" | cut -d: -f1)

repos=""
repos="$repos $REPO"
repos="$repos $IMAGE_NAME"
repos="$repos $(echo $IMAGE_NAME | sed 's|/|/docker-|')"
repos="$repos $IMAGE_NAME-docker"

DONE=0
for repo in $repos; do
    curl -sL https://github.com/$repo/archive/$BRANCH.tar.gz \
        | tar --strip-components=1 -C $BUILDDIR -xzf - \
        && DONE=1 && break || true
done
if [ "$DONE" = "0" ]; then
    echo "Cannot find Github repo." >&2
    exit 1
fi

cd $BUILDDIR/$SUBPATH

# Patch Dockerfile
DOCKERFILE_FROM=$(cat Dockerfile | grep -i ^FROM | awk '{print $2}' | convert_from)
FROM=${FROM:-$DOCKERFILE_FROM}
sed -i "s|^[fF][rR][oO][mM].*|FROM $FROM|" Dockerfile
for old_arch in amd64 x86_64 i386 x86; do
    sed -i "s|$old_arch|$ARCH|g" Dockerfile
done

if [ "$DEBUG" = "1" ]; then cat Dockerfile; fi

docker build -t $IMAGE .
docker tag $IMAGE $(echo $IMAGE | convert_from)

if [ "$PUSH" = "1" ]; then
    docker push $(echo $IMAGE | convert_from)
fi
